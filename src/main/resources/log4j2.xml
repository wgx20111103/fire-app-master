<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration monitorInterval="30" packages="log4j2.plugins">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

    <!--变量配置-->
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 %L:行号-->
        <!-- %logger{参数}或者%c{参数} 表示 %c{1.} 省略前面包名保留类名 -->
        <property name="LOG_PATTERN" value="%date{yyyy-MM-dd HH:mm:ss.SSS} (%c{0}:%L) %-5level --> %msg%n" />
        <!-- 定义日志存储的路径 -->
        <property name="FILE_PATH" value="./logs" />
    </Properties>

    <appenders>
        <!--输出日志到控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>


        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFile" fileName="${FILE_PATH}/fire" filePattern="${FILE_PATH}/fire.%d{yyyy-MM-dd}.%i.log">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 -->
                <TimeBasedTriggeringPolicy interval="1"/>
                <!-- 文件大小-->
                <SizeBasedTriggeringPolicy size="200MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <!--<DefaultRolloverStrategy max="15">
                &lt;!&ndash;删除备份的数据， maxDepth设置为1，代表扫描的目录深度，&ndash;&gt;
                <Delete basePath="${FILE_PATH}" maxDepth="2">
                    <IfFileName glob="*.log" />
                    &lt;!&ndash;指定文件过期时间，age的单位：D、H、M、S，分别表示天、小时、分钟、秒。&ndash;&gt;
                    <IfLastModified age="30D" />
                </Delete>
            </DefaultRolloverStrategy>-->
        </RollingFile>
    </appenders>

    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFile"/>
        </root>
    </loggers>

</configuration>

